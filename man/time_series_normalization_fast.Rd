% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AJDN_Functions.R
\name{time_series_normalization_fast}
\alias{time_series_normalization_fast}
\title{Calculate estimates of local standard deviation of time series when scales same for all dimensions}
\usage{
time_series_normalization_fast(
  x_matrix,
  t_index_list,
  scale_count_list,
  loud = NULL
)
}
\arguments{
\item{x_matrix}{\eqn{p} x \eqn{n} (\eqn{p} = # dimensions, \eqn{n} = # obsrevations) matrix of time series}

\item{t_index_list}{a list of time indexes (\eqn{n t_j}) we need to calculate local standard deviations for for each dimension}

\item{scale_count_list}{a list of length \eqn{p}, where the \eqn{p}th entry of the list is a vector of \eqn{ns_{r,1},...,ns_{r,\delta_n}} where
\eqn{\delta_n} is the number of scales being used in dimension \eqn{r}}

\item{loud}{OPTIONAL, if TRUE print message when dimensions are normalized}
}
\value{
a dataframe, with the local sd, time index, and dimension
}
\description{
This function calculates an estimate of the standard deviation of a time series at each time point
when the scales \eqn{s} are the same for every dimension. This is generally significantly faster than time_series_normalization.
}
\examples{
print('example here')
}
